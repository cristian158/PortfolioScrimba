*,
*::before,
*::after {
  box-sizing: border-box; /* changes how padding is calculated MAKES IT EASIER  */
}

/* CUSTOM PROPERTIES */

:root {
  /* font family */
  --ff-primary: 'Dancing Script', cursive;
  --ff-secondary: 'Caveat', cursive;
  /* font weigh */
  --fw-reg: 300;
  --fw-bold: 900;
  /* color */
  --clr-light: #97dde3;
  --clr-dark: #303030;
  --clr-accent: #16e0bd;
  /* font sizes, always in rem */
  --fs-h1: 3rem;
  --fs-h2: 2.3rem;
  --fs-h3: 1.3rem;
  --fs-body: 1rem;

  --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25), /* box shadow*/
        0.125em 0.125em 0.25em rgba(0,0,0,.15);
}

@media (min-width: 800px) { /* afects what's before @media */
  :root {
    --fs-h1: 8rem;
    --fs-h2: 3.8rem;
    --fs-h3: 1.6rem;
    --fs-body: 1.2em;
  }
}

/* GENERAL STYLES */

html {
  scroll-behavior: smooth;
}

body {
  background: var(--clr-light);
  color: var(--clr-dark);
  margin: 0;
  font-family: var(--ff-primary);
  font-size: var(--fs-body);
  line-height: 1.6;
}

p {
  /* font-size: 1em; */
}

section {
  padding: 2em;
}

img {
  display: block;
  max-width: 100%;
  max-height: 80rem;
  box-shadow: var(--bs);
}

strong { font-weight: var(--fw-bold) }

:focus { /* everything when gets a focus state gets outline on it */
  outline: 3px solid var(--clr-accent);
  outline-offset: 3px;
}

/* BUTTONS */

.btn {
  display: inline-block;
  padding: .5em 1.5em;
  background: var(--clr-accent);
  color: var(--clr-dark);
  text-decoration: none;
  cursor: pointer;
  font-size: .8em;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-weight: var(--fw-bold);
  transition: transform 250ms ease-in-out;
}

.btn:hover {
  transform: scale(1.2);
}

/* TYPOGRAPHY */

h1,
h2,
h3 {
  line-height: 1.1;
  margin: 0;
}

h1 { font-size: var(--fs-h1) }
h2 { font-size: var(--fs-h2) }
h3 { font-size: var(--fs-h3) }

.section__title {
  margin-bottom: .25em;  /* em for margins and paddings cause it's relative to font-size */
  font-size: 1.5em;
}

.section__title--intro {
  font-weight: var(--fw-reg);
  /* text-shadow: 0 0 5px var(--clr-accent); x-offset y-offset blur color // blur and offsets in px or rem */
}

.section__title--intro strong {
  display: block;
}
.section__subtitle {
  margin: 0;
  font-size var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
  background: var(--clr-accent);
  padding: .25em 1em;
  font-family: var(--ff-secondary);
  margin-bottom: 1em;
}

.section__subtitle--work {
  color: var(--clr-accent);
  font-weight: var(--fw-bold);
  margin-bottom: 1em;
}

/* HEADER  the nav usually takes a lot of styling */

header {
  display: flex; /* cause i want it @ left and button at right */
  justify-content: space-between;
  padding: 1em;
}

.logo {
  max/width: 100px;
}

.nav {
  position: fixed;
  background: var(--clr-dark);
  color: var(--clr-light);
  /* to put it all over the page */
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  /* to put on top of everything */
  z-index: 100;

  transform: translateX(100%);
  transition: transform 250ms cubic-bezier(.5, 0, .5, 1);
}

.nav__list {
  list-style: none;
  display: flex;
  height: 100%;
  flex-direction: column; /* so we can use the justify-content */
  justify-content: space-evenly;
  align-items: center;
  margin: 0; /* to reduce the space */
  padding: 0;
}

.nav__link {
  color: inherit;
  font-weight: var(--fw-bold);
  font-size: var(--fs-h2);
  text-decoration: none;
}

.nav__link:hover {
  color: var(--clr-accent);
}

.nav-toggle { /* the button itself */
  padding: .5em;
  background: transparent;
  border: 0;
  cursor: pointer;
  position: absolute;
  right: 1em; /* to put it where we want it to be */
  z-index: 1000;
}

.nav-open .nav { /* once the nave is open, the nav itself is going to.. */
    transform: translateX(0);
}

.nav-open .nav-toggle {
  position: fixed;
}

.nav-open .hamburger {
  transform: rotate(.625turn);
}

.nav-open .hamburger::before {
  transform: rotate(90deg) translateX(-6px);
}

.nav-open .hamburger::after {
  opacity: 0;
}


.hamburger {
  display: block; /* by default it's span, which is inline */
  position: relative; /* cause of the absolute pseudoelements */
}

.hamburger,
.hamburger::before,
.hamburger::after {
  background: var(--clr-accent);
  width: 2em;
  height: 3px;
  border-radius: 1em;
  transition: transform 250ms ease-in-out;
}

.hamburger::before,
.hamburger::after {
  content: '';
  position: absolute; /* is either position or display property */
  left: 0;
  right: 0;
}

.hamburger::before { top: 6px; }
.hamburger::after { bottom: 6px; }



/* INTRO SECT   */

.intro {
  position: relative;
}

.intro__img {
  min-width: 250px; /* box-shadow: var(--bs); comment out cause i put it on EVERY img */
}

.section__subtitle--intro {
  display: inline-block;
}

@media (min-width: 600px) { /* 600 is generic, bettr for 300 and 900  */
  .intro {
    display: grid;
    width: min-content;
    margin: auto;
    grid-column-gap: 1em;
    grid-template-areas:
      'img title'
      'img subtitle';
      /* min-content to shrink img as much as possible
         max-content to try make text big as possible */
    grid-template-columns: min-content max-content;
    font-size: .8em;
  }

  .intro__img {
    grid-area: img;
    min-width: 250px;
    position: relative; /* so the bar goes behind the picture*/
    z-index: 2; /* just to make sure that is behind*/
  }

  .section__title--intro {
    margin-top: 58px;
    margin-left: 12px;
    font-size: 3em;
  }

  .section__subtitle--intro {
    margin-bottom: 50px;
    align-self: start;
    grid-column: -1 / 1;
    grid-row: 2; /* so the elements overlap */
    text-align: right;
    position: relative;
    left: -1.5em;
    width: calc(100% + 4em)

  }
}

/* MY SERVICES SECTION */

.my-services {
  background-color: var(--clr-accent);
  background-image: url(../img/services-bg.jpg);
  background-size: cover;
  /* background-blend-mode: multiply; */
  color: var(--clr-light);
  text-align: center;
}

.section__title--services {
  color: var(--clr-accent);
  position: relative;
}

.section__title--services::after { /* the line beneath WHAT I DO */
  content: '';  /* pseudoelements need content  */
  display: block;
  width: 25%;
  height: 1px;
  margin: 0.5em auto 1em;
  background: var(--clr-light);
  opacity: 0.3; /* of the bg */
}

.services {
  margin-bottom: 4em;
}

.service {
  max-width: 500px;
  margin: 0 auto;
}

@media (min-width: 800px) {
  .section__title--intro {
    margin-left: 0.2em;
    margin-top: 40px;
    font-size: 7em;
  }

  .section__subtitle--intro {
    font-size: 3em;
    margin-bottom: 10px;
    margin-left: 20px;
  }

  .intro__img {
    width: min 400px;
  }

  .services {
    display: flex; /* so it makes 3 rows */
    max-width: 1000px;
    margin-left: auto;
    margin-right: auto;
  }

  .service + .service {
    margin-left: 2em;
  }

  .sections p {
    font-size: 1.5em;
  }

  .sections h2 {
    font-size: 2.7em;
  }

  .sections h3 {
    font-size: 2em;
  }
}

.about-me {
  max-width: 1000px;
  margin: 0 auto;
}

@media (min-width: 600px) {
  .about-me {
    display: grid;
    grid-template-columns: 1fr 250px;
    grid-template-areas:
        'title img'
        'subtitle img'
        'text img';
        grid-column-gap: 1.5em;
  }

  .section__title--about {
    grid-area: title;
  }

  .section__subtitle--about {
    grid-column: 1 / -1;
    grid-row: 2;
    position: relative;
    left: -1em;
    width: calc(100% + 2em);
    padding-left: 1em;
    padding-right: calc(200px + 4em);
  }

  .about-me__img {
    grid-area: img;
    position: relative;
    z-index: 2; /* to make sure it's always on top */
    /* grid-row: 1 / -1;  starting at the top and ending at the last row */
  }

  .sections p {
    font-size: 1.2em;
  }

  .sections h2 {
    font-size: 2.3em;
  }

  .sections h3 {
    font-size: 1.7em;
  }
}


/* MY WORK */
.my-work {
  background-color: var(--clr-dark);
  color: var(--clr-light);
  text-align: center;
}

.portfolio { /* this method works with 5 or 193 elements */
  /* grid-template-columns: repeat(3, 1fr);  to make 3 columns */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* so it automatically changes with resizing
  using auto-fit i have to use minmax values; each grid has min size of 300 but if there's room to grow, it will  */
  max-width: 1000px; /* to prevent it becoming one long row of pics */
  grid-column-gap: 1.5em;
  grid-row-gap: 1.5em;
}

.portfolio__item {
  background: var(--clr-accent); /* we don't see this color right away cause there's an img but we can play with it */
  overflow: hidden; /* without this, it looks weeeeird */
}

.portfolio__img {
  transition:
    transform 750ms cubic-bezier(.5, 0, .5, 1),
    opacity 250ms linear;
}

.portfolio__item:focus {
  position: relative;
  z-index: 2;
}

.portfolio__img:hover,
.portfolio__item:focus .portfolio__img {
  transform: scale(1.2);
  opacity: .75; /* */
}


/* footer */

.footer {
  background: #111;
  color: var(--clr-accent);
  text-align: center;
  padding: 2.5em 0;
  font-size: var(--fs-h3); /* it affects all footer including font awesome icons */
}

.footer a {
  color: inherit;
  text-decoration: none;
}

.footer__link {
  /* font-weight: var(--fw-bold); */
  font-family: Arial;
}

.footer__link:hover,
.social-list__link:hover {
  opacity: .7;
}

.footer__link:hover {
  text-decoration: underline;
}

.social-list {
  list-style: none; /* to avoid the bullets */
  display: flex; /* is gonna put them next to each other */
  justify-content: center; /* to put them in the middle*/
  margin: 2em 0 0;
  padding: 0; /* cause the default padding will make em pout of center */
}

.social-list__item {
  margin: 0 .5em;
}

.social-list__link {
  padding: .5em;
}



/* INDIV PORTFOLIO ITEMS */

.portfolio-item-indiv {
  padding: 0 2em 2em;
  max-width: 1000px;
  margin: 0 auto;
}

.portfolio-item-indiv p {
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  /* not using margin: 0 auto, to keep the default bottom and top */
}
